#welcome-modal.modal.hide.fade.in{"aria-hidden" => "true", "aria-labelledby" => "welcomeModalLabel", :role => "dialog", :tabindex => "-1"}
  .modal-header
    %button.close{"aria-hidden" => "true", "data-dismiss" => "modal", :type => "button"} ×
    %h3#myModalLabel Welcome to 2nd City Zoning!
  .modal-body
    %p
      %img.img-polaroid.pull-right{:src => '/images/logo.png'}
    %p
      Howdy! This interactive map lets you:
    %ul
      %li
        find out
        %strong how your building is zoned
      %li
        learn
        %strong what kinds of buildings
        and businesses you can build and where
      %li
        explore
        %strong zoning patterns
        throughout the city

    .clearfix
    %p
      I took inspiration from one of my favorite games:
      = succeed '.' do
        = link_to "Sim City 2000", "http://en.wikipedia.org/wiki/SimCity_2000"
      It started with the color scheme:
      %strong{:style => 'color: #7DD67D;'} green
      for residential,
      %strong{:style => 'color: #7474D7;'} blue
      for commercial and
      %strong{:style => 'color: #DCDC7F;'} yellow
      for industrial.

    %p
      From there I got a little carried away.
      %a{:href => '/about#dear-maxis'} Graphics, sounds, music, oh my.

    %p
      I had a lot of fun making this, so dive in and explore!

  .modal-footer
    %button.btn.btn-primary{"aria-hidden" => "true", "data-dismiss" => "modal"} Ok, thanks!

.row-fluid
  .span4
    .well
      %h5
        Find zone
        <small>(<a id='findMe' href='#'>find me</a>)</small>

      %input#txtSearchAddress.input-block-level{:placeholder => "Enter an address or an intersection", :type => "text"}

      %input#btnSearch.btn.btn-primary{:type => "button", :value => "Search"}
      %button#reset.btn Reset

    .well.hidden-phone
      %h5
        Zoning type
        <small>(<a href='/zones'>huh?</a>)</small>
      %ul.inputs-list.unstyled.zones
        %li
          %label.checkbox.inline{:rel => "popover", :"data-placement" => 'top', :"data-original-title" => "Residential (R)", :"data-content" => "Residential districts are intended to create, maintain and promote a variety of housing opportunities for individual households and to maintain the desired physical character of the city’s existing neighborhoods." }
            %input#cbZone4{:type => "checkbox"}
            %img{:src => '/images/icons/residential.png', :alt=> 'Residential'}
            Residential
        %li
          %label.checkbox.inline{:rel => "popover", :"data-placement" => 'top', :"data-original-title" => "Commercial (C,B,DX,DC,DS)", :"data-content" => "Business districts are intended to accommodate retail, service and commercial uses." }
            %input#cbZone1{:type => "checkbox"}
            %img{:src => '/images/icons/commercial.png', :alt=> 'Commercial'}
            Commercial
        %li
          %label.checkbox.inline{:rel => "popover", :"data-placement" => 'top', :"data-original-title" => "Industrial (M)", :"data-content" => "Manufacturing districts are intended to accommodate manufacturing, warehousing, wholesale and industrial uses outside the Central (Planned Manufacturing) Area." }
            %input#cbZone3{:type => "checkbox"}
            %img{:src => '/images/icons/industrial.png', :alt=> 'Industrial'}
            Industrial

      %h5
        Special Purpose Districts
      %ul.inputs-list.unstyled.zones
        %li
          %label.checkbox.inline{:rel => "popover", :"data-placement" => 'top', :"data-original-title" => "Planned Development (PD)", :"data-content" => "The Planned Development zoning designation is required for certain projects to ensure adequate public review, encourage unified planning and development, promote economically beneficial development patterns that are compatible with the character of existing neighborhoods, allow design flexibility, and encourage the protection and conservation of the city's natural resources." }
            %input#cbZone5{:type => "checkbox"}
            %img{:src => '/images/icons/government.png', :alt=> 'Planned Development'}
            Planned Development
        %li
          %label.checkbox.inline#transit-zone{:rel => "popover", :"data-placement" => 'top', :"data-original-title" => "Transportation (T)", :"data-content" => "Transportation zoning district is intended to preserve, protect and enhance road, rail and other important transportation corridors" }
            %input#cbZone11{:type => "checkbox"}
            %img{:src => '/images/icons/trains.png', :alt=> 'Transportation'}
            Transportation
        %li
          %label.checkbox.inline{:rel => "popover", :"data-placement" => 'top', :"data-original-title" => "Parks and Open Space (POS)", :"data-content" => "Parks and Open Space zoning district is intended to preserve, protect and enhance lands set aside for public open space, public parks and public beaches." }
            %input#cbZone12{:type => "checkbox"}
            %img{:src => '/images/icons/parks-entertainment.png', :alt=> 'Parks and Open Space'}
            Parks and Open Space

    .well.hidden-phone
      #jquery_jplayer
      / Using the cssSelectorAncestor option with the default cssSelector class names to enable control association of standard functions using built in features
      #jp_container
        %h5
          Music
          %small
            %a.jp-play{:href => "#"}
              %i.icon-play

            %a.jp-pause{:href => "#"}
              %i.icon-pause

            %a.jp-stop{:href => "#"}
              %i.icon-stop

            %span.pull-right
              %a{:href => '/about#dear-maxis'} disclaimer
        %ul#jplayer-tracks.nav.nav-pills
          %li
            %a.track.track-default{:href => "https://s3.amazonaws.com/second-city-zoning/Sim+City+2000+-+Theme.mp3"} Sim City Theme
          %li
            %a.track{:href => "https://s3.amazonaws.com/second-city-zoning/SimCity+2000+-+MoogyCit.mp3"} MoogyCit
          %li
            %a.track{:href => "https://s3.amazonaws.com/second-city-zoning/SimCity+2000+-+City+Shimmy.mp3"} City Shimmy

  .span8
    #mapCanvas
    %span.pull-right
      An
      %a.yay-link{:href => "http://opencityapps.org"} Open City
      app by
      = succeed ',' do
        %a.yay-link{:href => "http://derekeder.com"} Derek Eder
      %a.yay-link{:href => "http://ayaoconnor.com"} Aya O'Connor
      and
      %a{:href => "https://jpvelez.contently.com"} Juan-Pablo Velez

%audio#reticulating-splines{:src => 'https://s3.amazonaws.com/second-city-zoning/effects/reticulating+splines.mp3'}
%audio#explosion{:src => 'https://s3.amazonaws.com/second-city-zoning/effects/explosion.mp3'}
%audio#mouse-click{:src => 'https://s3.amazonaws.com/second-city-zoning/effects/click.mp3'}
%audio#yay{:src => 'https://s3.amazonaws.com/second-city-zoning/effects/yay.mp3'}

/%audio#simcopter-one{:src => 'https://s3.amazonaws.com/second-city-zoning/effects/simcopter-one.mp3'}
/%audio#zzt{:src => 'https://s3.amazonaws.com/second-city-zoning/effects/zzt.mp3'}
/%audio#train{:src => 'https://s3.amazonaws.com/second-city-zoning/effects/train.mp3'}

- content_for :javascripts do
  :javascript
    var ZoningDict = ["Business", "Commercial / Mixed-Use", "Manufacturing", "Residential", 
                      "Planned Development", "Planned Manufacturing District", "Downtown Mixed-Use",
                      "Downtown Core", "Downtown Residential", "Downtown Service", 
                      "Transportation","Parks and Open Space"];

  = include_javascript :"jquery.address.min"
  = include_javascript :"http://maps.google.com/maps/api/js?sensor=false"
  = include_javascript :"http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"
  %script{:src => "/javascripts/fusiontips.js?2", :type => "text/javascript"}
  %script{:src => "/javascripts/maps_lib.js?2", :type => "text/javascript"}
  = include_javascript :"bootstrap-popover"
  = include_javascript :"bootstrap-modal"
  = include_javascript :"jquery.cookie"
  = include_javascript :"jquery.jplayer.min"

  :javascript
    $(window).resize(function () {
      var h = $(window).height(),
        offsetTop = 120; // Calculate the top offset

      $('#mapCanvas').css('height', (h - offsetTop));
    }).resize();

    $(function() {
      $('label.checkbox.inline').popover();

      MapsLib.initialize();
      $(':checkbox').click(function(){
        play_multi_sound("mouse-click");
        MapsLib.doSearch();
      });

      $('#btnSearch').click(function(){
        play_multi_sound("reticulating-splines");
        MapsLib.doSearch();
      });

      $('#findMe').click(function(){
        play_multi_sound("reticulating-splines");
        MapsLib.findMe();
        return false;
      });

      $('#reset').click(function(){
        play_multi_sound("explosion");
        $.address.parameter('address','');
        $.address.parameter('radius','');
        MapsLib.initialize();
        return false;
      });

      $("#txtSearchAddress").keydown(function(e){
          var key =  e.keyCode ? e.keyCode : e.which;
          if(key == 13) {
              $('#btnSearch').click();
              return false;
          }
      });

      $('.yay-link').click(function(e){
        var location = $(this).attr('href');
        play_multi_sound("yay");
        setTimeout(
          function(){
            window.location = location;
          },3000)
        e.preventDefault();
      });

      $('.jp-stop').click(function(){
        $.cookie("play-music", "off", { expires: 7 });
      });

      $('.jp-pause').click(function(){
        $.cookie("play-music", "off", { expires: 7 });
      });

      $('.jp-play').click(function(){
        $.cookie("play-music", "on", { expires: 7 });
      });

      //$('#welcome-modal').modal('show');
      if ($.cookie("show-welcome") != "read") {
        $('#welcome-modal').modal('show');
        $.cookie("show-welcome", "read", { expires: 7 });
      }

      //---------music player---------------
      // Local copy of jQuery selectors, for performance.
      var my_jPlayer = $("#jquery_jplayer"),
        my_trackName = $("#jp_container .track-name"),
        my_playState = $("#jp_container .play-state")

      // Some options
      var opt_play_first = true, // If true, will attempt to auto-play the default track on page loads. No effect on mobile devices, like iOS.
        opt_auto_play = true // If true, when a track is selected, it will auto-play.

      if ($.cookie("play-music") == "off") {
        opt_play_first = false;
      }

      // A flag to capture the first track
      var first_track = true;

      // Instance jPlayer
      my_jPlayer.jPlayer({
        ready: function () {
          $("#jp_container .track-default").click();
        },
        swfPath: "javascripts",
        cssSelectorAncestor: "#jp_container",
        supplied: "mp3",
        wmode: "window",
        loop: true
      });

      // Create click handlers for the different tracks
      $("#jp_container .track").click(function(e) {
        $('#jplayer-tracks').children('li').attr('class', '');
        $(this).parent().attr('class', 'active');
        my_jPlayer.jPlayer("setMedia", {
          mp3: $(this).attr("href")
        });
        if((opt_play_first && first_track) || (opt_auto_play && !first_track)) {
          my_jPlayer.jPlayer("play");
        }
        first_track = false;
        $(this).blur();
        return false;
      });

      //-----------handle multi-channel audio-----------------
      var channel_max = 10;                   // number of channels
      var audiochannels = new Array();
      for (a=0;a<channel_max;a++) {                 // prepare the channels
        audiochannels[a] = new Array();
        audiochannels[a]['channel'] = new Audio();            // create a new audio object
        audiochannels[a]['finished'] = -1;              // expected end time for this channel
      }
      function play_multi_sound(s) {
        for (a=0;a<audiochannels.length;a++) {
          thistime = new Date();
          if (audiochannels[a]['finished'] < thistime.getTime()) {      // is this channel finished?
            audiochannels[a]['finished'] = thistime.getTime() + document.getElementById(s).duration*1000;
            audiochannels[a]['channel'].src = document.getElementById(s).src;
            audiochannels[a]['channel'].load();
            audiochannels[a]['channel'].play();
            break;
          }
        }
      }

    });