#welcome-modal.modal.hide.fade.in{"aria-hidden" => "true", "aria-labelledby" => "welcomeModalLabel", :role => "dialog", :tabindex => "-1"}
  .modal-header
    %button.close{"aria-hidden" => "true", "data-dismiss" => "modal", :type => "button"} ×
    %h3#myModalLabel Chicago Zoning
  .modal-body
    %p 
      %img.img-polaroid.pull-right{:src => '/images/sim-city-intro.jpg'}
      Welcome to Chicago Zoning!
    %p
      This app lets you: 
    %ul
      %li find out how your building is zoned
      %li explore zoning areas throughout the city
      
    %p 
      If you've ever played 
      = link_to "Sim City", "http://en.wikipedia.org/wiki/SimCity_2000"
      I tried to follow the color scheme: green for residential, blue for commercial and yellow for industrial. 
      
    %p
      So dive in and explore!
  .modal-footer
    %button.btn.btn-info{"aria-hidden" => "true", "data-dismiss" => "modal"} Ok, thanks!

.row-fluid
  .span4
    .well
      %h4
        Find address
        <small>(<a id='findMe' href='#'>find me</a>)</small>

      %input#txtSearchAddress.input-block-level{:placeholder => "Enter an address or an intersection", :type => "text"}
      
      %input#btnSearch.btn.btn-primary{:type => "button", :value => "Search"}
      %button#reset.btn Reset
      
    .well
      %h4
        Zoning type
        <small>(<a href='/zones'>huh?</a>)</small>
      %ul.inputs-list.unstyled
        %li
          %label.checkbox.inline{:rel => "popover", :"data-original-title" => "Business (B)", :"data-content" => "Business districts are intended to accommodate retail, service and commercial uses." }
            %input#cbZone1{:type => "checkbox"}
            %span.zone-box.zone-1
            Commercial
        %li
          %label.checkbox.inline{:rel => "popover", :"data-original-title" => "Residential (R)", :"data-content" => "Residential districts are intended to create, maintain and promote a variety of housing opportunities for individual households and to maintain the desired physical character of the city’s existing neighborhoods. While the districts primarily accommodate residential use types, nonresidential uses that are compatible with residential neighborhoods are also allowed." }
            %input#cbZone4{:type => "checkbox"}
            %span.zone-box.zone-4
            Residential
        %li
          %label.checkbox.inline{:rel => "popover", :"data-original-title" => "Manufacturing (M)", :"data-content" => "Manufacturing districts are intended to accommodate manufacturing, warehousing, wholesale and industrial uses outside the Central (Planned Manufacturing) Area." }
            %input#cbZone3{:type => "checkbox"}
            %span.zone-box.zone-3
            Industrial
        
      %h5
        Special Purpose Districts
      %ul.inputs-list.unstyled
        %li
          %label.checkbox.inline{:rel => "popover", :"data-original-title" => "Planned Development (PD)", :"data-content" => "The Planned Development zoning designation is required for certain projects to ensure adequate public review, encourage unified planning and development, promote economically beneficial development patterns that are compatible with the character of existing neighborhoods, allow design flexibility, and encourage the protection and conservation of the city's natural resources." }
            %input#cbZone5{:type => "checkbox"}
            %span.zone-box.zone-5
            Planned Development
        %li
          %label.checkbox.inline#transit-zone{:rel => "popover", :"data-original-title" => "Transportation (T)", :"data-content" => "Transportation zoning district is intended to preserve, protect and enhance road, rail and other important transportation corridors" }
            %input#cbZone11{:type => "checkbox"}
            %span.zone-box.zone-11
            Transportation
        %li
          %label.checkbox.inline{:rel => "popover", :"data-original-title" => "Parks and Open Space (POS)", :"data-content" => "Parks and Open Space zoning district is intended to preserve, protect and enhance lands set aside for public open space, public parks and public beaches." }
            %input#cbZone12{:type => "checkbox"}
            %span.zone-box.zone-12
            Parks and Open Space

    .well
      %audio#reticulating-splines{:src => 'https://s3.amazonaws.com/chicago-zoning/effects/reticulating+splines.mp3'}
      %audio#explosion{:src => 'https://s3.amazonaws.com/chicago-zoning/effects/explosion.mp3'}
      %audio#mouse-click{:src => 'https://s3.amazonaws.com/chicago-zoning/effects/click.mp3'}
      %audio#train{:src => 'https://s3.amazonaws.com/chicago-zoning/effects/train.mp3'}

      #jquery_jplayer
      / Using the cssSelectorAncestor option with the default cssSelector class names to enable control association of standard functions using built in features
      #jp_container
        %h4
          Sim City Music
          %small
            %a.jp-play{:href => "#"}
              %i.icon-play
        
            %a.jp-pause{:href => "#"}
              %i.icon-pause
        
            %a.jp-stop{:href => "#"}
              %i.icon-stop
        %ul#jplayer-tracks.nav.nav-pills
          %li
            %a.track.track-default{:href => "https://s3.amazonaws.com/chicago-zoning/Sim+City+2000+-+Theme.mp3"} Sim City Theme
          %li
            %a.track{:href => "https://s3.amazonaws.com/chicago-zoning/SimCity+2000+-+MoogyCit.mp3"} MoogyCit
          %li
            %a.track{:href => "https://s3.amazonaws.com/chicago-zoning/SimCity+2000+-+City+Shimmy.mp3"} City Shimmy

    %p
      An 
      %a{:href => "https://data.cityofchicago.org/Community-Economic-Development/Boundaries-Zoning-Districts/p8va-airx"} open data 
      project by
      %a{:href => "http://derekeder.com"} Derek Eder
      /and
      /%a{:href => "https://jpvelez.contently.com"} Juan-Pablo Velez

  .span8
    #mapCanvas

- content_for :javascripts do
  :javascript
    var ZoningDict = ["Business", "Commercial / Mixed-Use", "Manufacturing", "Residential", "Planned Development",
                  "Planned Manufacturing District", "Downtown Mixed-Use", "Downtown Core", "Downtown Residential", "Downtown Service",
                  "Transportation","Parks and Open Space"];

  = include_javascript :"jquery.address.min"
  = include_javascript :"http://maps.google.com/maps/api/js?sensor=false"
  = include_javascript :"http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"
  = include_javascript :fusiontips
  = include_javascript :maps_lib
  = include_javascript :"bootstrap-popover"
  = include_javascript :"bootstrap-modal"
  = include_javascript :"jquery.cookie"
  = include_javascript :"jquery.jplayer.min"

  :javascript
    $(window).resize(function () {
      var h = $(window).height(),
        offsetTop = 70; // Calculate the top offset
    
      $('#mapCanvas').css('height', (h - offsetTop));
    }).resize();
    
    $(function() {
      $('label.checkbox.inline').popover();
      
      MapsLib.initialize();
      $(':checkbox').click(function(){
        play_multi_sound("mouse-click");
        MapsLib.doSearch();
      });

      $('#btnSearch').click(function(){
        $("#reticulating-splines")[0].play();
        MapsLib.doSearch();
      });
      
      $('#findMe').click(function(){
        MapsLib.findMe(); 
        return false;
      });
      
      $('#reset').click(function(){
        $("#explosion")[0].play();
        $.address.parameter('address','');
        $.address.parameter('radius','');
        MapsLib.initialize(); 
        return false;
      });
      
      $("#txtSearchAddress").keydown(function(e){
          var key =  e.keyCode ? e.keyCode : e.which;
          if(key == 13) {
              $('#btnSearch').click();
              return false;
          }
      });
      
      //$('#welcome-modal').modal('show');
      if ($.cookie("show-welcome") != "read") {
        $('#welcome-modal').modal('show');
        $.cookie("show-welcome", "read", { expires: 7 });
      }

      //music player
      // Local copy of jQuery selectors, for performance.
      var my_jPlayer = $("#jquery_jplayer"),
        my_trackName = $("#jp_container .track-name"),
        my_playState = $("#jp_container .play-state")

      // Some options
      var opt_play_first = true, // If true, will attempt to auto-play the default track on page loads. No effect on mobile devices, like iOS.
        opt_auto_play = true // If true, when a track is selected, it will auto-play.

      // A flag to capture the first track
      var first_track = true;

      // Instance jPlayer
      my_jPlayer.jPlayer({
        ready: function () {
          $("#jp_container .track-default").click();
        },
        swfPath: "javascripts",
        cssSelectorAncestor: "#jp_container",
        supplied: "mp3",
        wmode: "window",
        loop: true
      });

      // Create click handlers for the different tracks
      $("#jp_container .track").click(function(e) {
        $('#jplayer-tracks').children('li').attr('class', '');
        $(this).parent().attr('class', 'active');
        my_jPlayer.jPlayer("setMedia", {
          mp3: $(this).attr("href")
        });
        if((opt_play_first && first_track) || (opt_auto_play && !first_track)) {
          my_jPlayer.jPlayer("play");
        }
        first_track = false;
        $(this).blur();
        return false;
      });

      //multi-channel audio stuff
      var channel_max = 10;                   // number of channels
      var audiochannels = new Array();
      for (a=0;a<channel_max;a++) {                 // prepare the channels
        audiochannels[a] = new Array();
        audiochannels[a]['channel'] = new Audio();            // create a new audio object
        audiochannels[a]['finished'] = -1;              // expected end time for this channel
      }
      function play_multi_sound(s) {
        for (a=0;a<audiochannels.length;a++) {
          thistime = new Date();
          if (audiochannels[a]['finished'] < thistime.getTime()) {      // is this channel finished?
            audiochannels[a]['finished'] = thistime.getTime() + document.getElementById(s).duration*1000;
            audiochannels[a]['channel'].src = document.getElementById(s).src;
            audiochannels[a]['channel'].load();
            audiochannels[a]['channel'].play();
            break;
          }
        }
      }

    });